{"version":3,"sources":["component/ColorPicker.js","component/SizeSetting.js","component/Result.js","component/Reset.js","App.js","index.js"],"names":["ColorPicker","props","state","colors","handleColorChange","bind","e","this","onColorSetting","target","style","backgroundColor","color","colorState","elements","map","index","className","showColor","onClick","React","Component","SizeSetting","onChangeSize","value","onChangeFontSize","fontSize","type","Result","borderColor","id","setUX","Reset","onHandleReset","onhandleReset","App","handleChange","handleReset","setState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAsCeA,E,kDAjCb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACCC,MAAM,CAACC,OAAO,CAAC,MAAM,OAAO,SAAS,WAC1C,EAAKC,kBAAkB,EAAKA,kBAAkBC,KAAvB,gBAHT,E,qDAIhB,SAAkBC,GAEhBC,KAAKN,MAAMO,eAAeF,EAAEG,OAAOC,MAAMC,mB,uBAE3C,SAAUC,GAER,MAAO,CAACD,gBAAkBC,K,oBAE5B,WACC,IAAD,OACQC,EAAWN,KAAKN,MAAMW,MAEtBE,EADOP,KAAKL,MAAMC,OACFY,KAAI,SAACH,EAAMI,GAAP,OAAgB,sBAAkBC,UAAWJ,IAAcD,EAAQ,UAAW,GACvGF,MAAO,EAAKQ,UAAUN,GACtBO,QAAS,EAAKf,mBAFsCY,MAInD,OACI,sBAAKC,UAAU,sBAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,oBAAIA,UAAU,cAAd,4BAEA,qBAAKA,UAAU,aAAf,SACQH,W,GA3BEM,IAAMC,WCyBjBC,E,kDA1Bb,WAAYrB,GAAQ,IAAD,8BACjB,cAAMA,IACDsB,aAAa,EAAKA,aAAalB,KAAlB,gBAFD,E,gDAIlB,SAAamB,GACVjB,KAAKN,MAAMwB,iBAAiBD,K,oBAG9B,WAAU,IAAD,OACDE,EAASnB,KAAKN,MAAMyB,SACxB,OAEI,8BACA,sBAAKT,UAAU,sBAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,qBAAIA,UAAU,cAAd,UAA6BS,EAA7B,UAEF,sBAAKT,UAAU,aAAf,UACE,wBAAQU,KAAK,SAASV,UAAU,kBAAkBE,QAAS,kBAAI,EAAKI,aAAa,IAAjF,uBACA,wBAAQI,KAAK,SAASV,UAAU,kBAAkBE,QAAS,kBAAI,EAAKI,cAAc,IAAlF,mC,GApBUH,IAAMC,WCwBjBO,E,2JAvBX,SAAMhB,EAAMc,GAER,MAAM,CACFG,YAAajB,EACbA,MAAMA,EACNc,SAAUA,K,oBAGlB,WACE,IAAMA,EAASnB,KAAKN,MAAMyB,SACpBd,EAAML,KAAKN,MAAMW,MACrB,OACI,gCACA,yCAAYA,EAAZ,iBAAiCc,EAAjC,SACA,qBAAKI,GAAG,UAAUpB,MAChBH,KAAKwB,MAAOnB,EAAMc,GADpB,0C,GAfSN,IAAMC,WCgBZW,E,kDAfX,WAAY/B,GAAQ,IAAD,8BACf,cAAMA,IACDgC,cAAc,EAAKA,cAAc5B,KAAnB,gBAFJ,E,iDAInB,WACIE,KAAKN,MAAMiC,kB,oBAEf,WAAU,IAAD,OACD,OACI,8BACM,wBAAQP,KAAK,SAASV,UAAU,kBAAkBE,QAAS,kBAAI,EAAKc,iBAApE,yB,GAXFb,IAAMC,WCkEXc,E,kDA7DX,WAAYlC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CAACU,MAAM,MAAMc,SAAS,MACnC,EAAKU,aAAe,EAAKA,aAAa/B,KAAlB,gBACpB,EAAKkB,aAAa,EAAKA,aAAalB,KAAlB,gBAClB,EAAKgC,YAAa,EAAKA,YAAYhC,KAAjB,gBALH,E,gDAOpB,SAAaO,GAETL,KAAK+B,SAAS,CAAC1B,MAAMA,M,0BAEzB,SAAaY,GAELjB,KAAKL,MAAMwB,SAAS,GAAKnB,KAAKL,MAAMwB,SAAS,GAC5CnB,KAAK+B,SAAS,CAACZ,SAASnB,KAAKL,MAAMwB,SAASF,IAGpCjB,KAAKL,MAAMwB,UAAU,EAElBF,EAAM,GAELjB,KAAK+B,SAAS,CAACZ,SAASnB,KAAKL,MAAMwB,SAASF,IAK3CjB,KAAKL,MAAMwB,UAAU,IAEvBF,EAAM,GAEDjB,KAAK+B,SAAS,CAACZ,SAASnB,KAAKL,MAAMwB,SAASF,M,yBAKrE,WAEMjB,KAAK+B,SAAS,CAAC1B,MAAM,MAAMc,SAAS,S,oBAGzC,WACI,OACA,qBAAKT,UAAU,kBAAf,SACK,sBAAKA,UAAU,MAAf,UACA,qBAAKA,UAAU,QAAf,SACO,cAAC,EAAD,CAAcL,MAAOL,KAAKL,MAAMU,MAC5BJ,eAAgBD,KAAK6B,iBAGjC,sBAAKnB,UAAU,QAAf,UACQ,cAAC,EAAD,CAAaS,SAAUnB,KAAKL,MAAMwB,SAAUD,iBAAkBlB,KAAKgB,eACnE,cAAC,EAAD,CAAQW,cAAe3B,KAAK8B,iBAEpC,qBAAKpB,UAAU,SAAf,SACQ,cAAC,EAAD,CAASS,SAAUnB,KAAKL,MAAMwB,SAAUd,MAAOL,KAAKL,MAAMU,mB,GAvD5DQ,IAAMC,WCAxBkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d693e3a4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\n\r\nclass ColorPicker extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n      this.state={colors:['red','blue','yellow','purple']}\r\n      this.handleColorChange=this.handleColorChange.bind(this);}\r\n    handleColorChange(e){\r\n  \r\n      this.props.onColorSetting(e.target.style.backgroundColor)\r\n    }\r\n    showColor(color)\r\n    {\r\n      return {backgroundColor : color}\r\n    }\r\n    render()\r\n    { \r\n      const colorState=this.props.color;\r\n      const colors=this.state.colors;\r\n      const elements=colors.map((color,index)=> <span key={index} className={colorState=== color ? 'actived' :''}\r\n       style={this.showColor(color)} \r\n       onClick={this.handleColorChange}\r\n       ></span>)\r\n        return (     \r\n            <div className=\"panel panel-primary\">\r\n              <div className=\"panel-heading\">\r\n                <h3 className=\"panel-title\">Color Picker</h3>\r\n              </div>\r\n                <div className=\"panel-body\">\r\n                       {elements}\r\n                      \r\n              </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ColorPicker;","import React from 'react';\r\n\r\nclass SizeSetting extends React.Component{\r\n  constructor(props) {\r\n    super(props)\r\n    this.onChangeSize=this.onChangeSize.bind(this);\r\n}\r\n   onChangeSize(value){\r\n      this.props.onChangeFontSize(value)\r\n   }\r\n   \r\n    render() {\r\n      const fontSize=this.props.fontSize;\r\n        return (\r\n         \r\n            <div >\r\n            <div className=\"panel panel-warning\">\r\n              <div className=\"panel-heading\">\r\n                <h3 className=\"panel-title\">{fontSize}px</h3>\r\n              </div>\r\n              <div className=\"panel-body\">\r\n                <button type=\"button\" className=\"btn btn-success\" onClick={()=>this.onChangeSize(1)}>Giảm</button> \r\n                <button type=\"button\" className=\"btn btn-success\" onClick={()=>this.onChangeSize(-1)}>Tăng</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\nexport default SizeSetting;","import React from 'react';\r\n\r\nclass Result extends React.Component{\r\n    setUX(color,fontSize)\r\n    {\r\n        return{\r\n            borderColor: color,\r\n            color:color,\r\n            fontSize: fontSize\r\n        }\r\n    }\r\n    render() {\r\n      const fontSize=this.props.fontSize;\r\n      const color=this.props.color\r\n        return (\r\n            <div >\r\n            <p>Color : {color} - Fontsize : {fontSize} px</p>\r\n            <div id=\"content\" style={\r\n              this.setUX( color,fontSize)\r\n              } >\r\n              Nội dung setting\r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\nexport default Result;","import React from 'react';\r\n\r\nclass Reset extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.onHandleReset=this.onHandleReset.bind(this);\r\n    }\r\n    onHandleReset(){\r\n        this.props.onhandleReset()\r\n     }\r\n    render() {\r\n            return(\r\n                <div>\r\n                      <button type=\"button\" className=\"btn btn-primary\" onClick={()=>this.onHandleReset()}>reset</button>\r\n                </div>\r\n            )\r\n    }\r\n}\r\nexport default Reset","import React from 'react';\nimport ColorPicker from'./component/ColorPicker'\nimport SizeSetting from'./component/SizeSetting'\nimport Result from'./component/Result'\nimport Reset from'./component/Reset'\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {color:'red',fontSize:'15'}\n        this.handleChange = this.handleChange.bind(this) \n        this.onChangeSize=this.onChangeSize.bind(this);\n        this.handleReset= this.handleReset.bind(this)\n    }\n   handleChange(color){\n      \n       this.setState({color:color})\n   }\n   onChangeSize(value){\n \n        if(this.state.fontSize>8 && this.state.fontSize<36)\n            this.setState({fontSize:this.state.fontSize-value})\n        else\n        {\n                 if(this.state.fontSize<=8 )\n                 {\n                    if(value<0)\n                    {\n                        this.setState({fontSize:this.state.fontSize-value})\n                    }\n                  \n                 }\n                    \n                 else if(this.state.fontSize>=36)\n                 {\n                    if(value>0) \n                        {\n                            this.setState({fontSize:this.state.fontSize-value})\n                        }\n                 }            \n        }\n   }\n   handleReset(){\n      \n         this.setState({color:'red',fontSize:'15'})\n         \n   }\n    render() {\n        return(\n        <div className='container mt-50'>\n             <div className='row'>\n             <div className=\"col-6\">\n                    <ColorPicker  color={this.state.color}\n                        onColorSetting={this.handleChange}\n                    />\n            </div>\n            <div className=\"col-6\">\n                    <SizeSetting fontSize={this.state.fontSize} onChangeFontSize={this.onChangeSize}/>\n                    <Reset  onhandleReset={this.handleReset} />\n            </div>\n            <div className=\"col-12\">\n                    <Result  fontSize={this.state.fontSize} color={this.state.color}  />\n            </div>\n            </div>\n        </div>\n        )\n    }\n}\nexport default App;\n \n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}